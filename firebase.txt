firebase : 포괄적인 앱 개발을 지원해주는 Baas 방식의 플랫폼
 - firebase는 어디까지 무엇을 해주는가??
 - 인증(로그인등), 웹(앱) 호스팅, 실시간 db , 저장소 제공 , 머신러닝 구축,
    서비스 분석 및 원격 구성
 - 파이어베이스의 기본 목적은 포괄적인 도구 및 서비스 제공을 통해 
   고품질 앱을 빌드하는데 모든 것을 제공하는것이 목적이라고 말함

클라우드 : 인터넷을 통해 접속할 수 있는 가상화된 서버, 그리고 그 서버에서 
           실행되는 소프트웨어나 DB
 - aws , Azure, GCP, Naver Cloud
 - cloudtype , heroku, Netlify, Vercel, supabase

firebase를 활용하는 유명 서비스
 - Airbnb  , uber , insta
 - 주로 대규모서비스라 할지라도 인증과 실시간 데이터 동기화 등에 firebase를 
   많이 활용하는 편

firebase 사용시 주의사항 : 
 - 요금제를 업그레이드 할시 사용한만큼 돈이 나오는점은 주의
    (최근에는 무료 요금제로 활용할수 있는 기능들이 점점 적어지는 추세)
 - 소규모 개발 테스트에서는 여전히 건재

firebase를 이용했을때의 장점
1. 보안 신경을 안써도 됨
2. 서버개발자 입장에서도 귀찮은 기능들을 많이 처리


Saas (Software as a service) : 클라우드 환경에서 도는 소프트웨어
    -> 웹 메일 서비스(SMTP)
Paas(Platform as a service) : 특정 서비스를 쉽게 개발할 수 있게 도움주는 플랫폼 제공 서비스
    -> heroku, 
Iaas(Infrastructure as a service): 인프라 스트럭처(필요한 만큼 인프라를 쓰고 그만큼의 비용을 지급)
    ->  AWS , Azure , GCP
Baas(Backend as a service) : FE개발자를 위한 클라우드 서비스
    백엔드 기능 개발 없이 플러그인 형태로 서비스를 제공
    -> firebase

Faas(Funtion as a service) : 서버리스
    -> 서버를 관리할 필요없이 특정 이벤트에 반응하는 함수를 등록하고 해당 이벤트가
        발생하면 함수가 실행되는 구조


시스템 구성. 
 - 프로젝트의 3-tier(3계층 아키텍쳐)

프레젠테이션 레이어 : react vite 기반의 반응형 ui (ui)
비즈니스 로직 레이어 : firebase (기능들)
데이터 레이어 : firebase(firestore / 데이터 , 인증)

tailwind : CSS 프레임 워크
 -> 유틸리티 퍼스트, 쉽고 빠른 체계적인 스타일링
    (상속 보다는 컴포넌트)